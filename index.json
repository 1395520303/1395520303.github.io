[{"content":"暂时没想好这里要写什么捏😶\n","date":"2022年11月30日","permalink":"/categories/","section":"分类？","summary":"暂时没想好这里要写什么捏😶","title":"分类？"},{"content":"","date":"2022年11月30日","permalink":"/","section":"小张的博客","summary":"","title":"小张的博客"},{"content":"这里是关于生活的一些记录😊\n","date":"2022年11月30日","permalink":"/records/","section":"记录生活","summary":"这里是关于生活的一些记录😊","title":"记录生活"},{"content":"这里是我在学习过程中自己的一些理解，可能理解的不是很到位，但是也能提供一些参考吧🙇🏻‍♂️\n","date":"2022年11月28日","permalink":"/articles/","section":"一些文章","summary":"这里是我在学习过程中自己的一些理解，可能理解的不是很到位，但是也能提供一些参考吧🙇🏻‍♂️","title":"一些文章"},{"content":"NestJs 是什么 #\r我截取了部分官方文档的说明，简单来说\nNestJS是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的开发框架。 它利用 JavaScript 的渐进增强的能力，使用并完全支持 TypeScript （仍然允许开发者使用纯 JavaScript 进行开发） 在底层，Nest 构建在强大的 HTTP 服务器框架上，例如 Express （默认），并且还可以通过配置从而使用 Fastify ！\n啦哩啦哩\n","date":"2022年11月20日","permalink":"/articles/abouthugo/","section":"一些文章","summary":"NestJs 是什么 #\r我截取了部分官方文档的说明，简单来说","title":"NestJs"},{"content":" 第一次写博客有点不知所措，随便聊聊吧😋 之前跟着学Nestjs的时候视频里用了prisma，当时听的似懂非懂，感觉Nestjs好用又不好用，Nestjs没记住多少但是记住了prisma，所以现在想仔细学一下 本篇文章只是介绍一下prisma连接数据库（我用的是mysql）以及一些简单的操作（复杂的我暂时还用不上），所以如果有讲的不好的请多多见谅🤧\n注意 本教程需要安装Node.js（12.2及以上）\r1.安装Prisma #\r先建立一个文件夹,这里我就建立一个叫做prisma-mysql的文件夹\nmkdir prisma-mysql cd prisma-mysql\r然后我们初始化一下并添加依赖\nnpm init -y\rnpm i prisma -D\r现在我们就可以调用Prisma CLI了，通过前缀npx来调用Prisma CLI:\nnpx prisma\r通过使用以下命令创建Prisma schema文件来设置Prisma项目\nnpx prisma init\r这个Prisma schema是什么呢 咱们使用 npx prisma init 会建立一个名为prisma的新目录，其中包含一个名为schema.prisma的文件和一个位于项目根目录中的.env文件 schema.prisma中包含了prisma模式，简单来说就是连接什么数据库，还有prisma客户端生成器，这个我觉得不用了解，知道就好😁 .env是一个用于定义环境变量的文件（用于数据库连接）。\n2.连接数据库 #\rprisma/schema.prisma #\rdatasource db {\rprovider = \u0026quot;postgresql\u0026quot;\rurl = env(\u0026quot;DATABASE_URL\u0026quot;)\r}\r嗯，这就是你应该在schema.prisma中应该看到的东西🧐，因为prisma默认使用的是postgresql，所以刚刚你用的init命令就建立了postgresql的连接，现在我们把它改成mysql的连接\ndatasource db {\rprovider = \u0026quot;mysql\u0026quot;\rurl = env(\u0026quot;DATABASE_URL\u0026quot;)\r}\r怎么样，是不是还挺简单的\n下面我们设置一下这个DATABASE_URL，如果你已经看过了.env文件，那你应该对这个东西不是很陌生。要连接mysql数据库，这个url的结构应该是这个样子的\nmysql://Username:Password@Host:Port/Database\r本地运行时，你的URL通常是这个样子的\nDATABASE_URL=\u0026quot;mysql://root:randompassword@localhost:3306/mydb\u0026quot;\r3.创建表单 #\r接下来我们建一些表玩一下这个prisma，就用官方给出的例子吧\nprisma/schema.prisma #\rmodel Post {\rid Int @id @default(autoincrement())\rcreatedAt DateTime @default(now())\rupdatedAt DateTime @updatedAt\rtitle String @db.VarChar(255)\rcontent String?\rpublished Boolean @default(false)\rauthor User @relation(fields: [authorId], references: [id])\rauthorId Int\r}\rmodel Profile {\rid Int @id @default(autoincrement())\rbio String?\ruser User @relation(fields: [userId], references: [id])\ruserId Int @unique\r}\rmodel User {\rid Int @id @default(autoincrement())\remail String @unique\rname String?\rposts Post[]\rprofile Profile?\r}\r这些数据模型需要映射到数据库中，我们使用prisma migrateCLI命令\nnpx prisma migrate dev --name init\r这个name你可以自己取，它用于给你这次的记录命名 现在我们的表单也创建好了，下面我们就要往表里添加数据并进行操作了！😋\n4.添加数据并进行操作！ #\r要开始使用Prisma Client，你需要安装@prisma/client包\nnpm install @prisma/client\r安装命令会自动调用prisma generate，它会读取prisma模式并生成一个适合您的模型的prisma Client版本。\n这个generate命令嘛，官方的解释我还不是很懂，不过用我的理解来讲（比较浅显），就是它会根据你在schema.prisma文件里的模型去数据库里生成对应的表，有时间我再去看看吧🤣\n下面我们在根目录中建立一个index.js文件\nindex.js #\rconst { PrismaClient } = require('@prisma/client')\rconst prisma = new PrismaClient()\rasync function main() {\rconst allUsers = await prisma.user.findMany()\rconsole.log(allUsers)\r}\rmain()\r.catch((e) =\u0026gt; {\rthrow e\r})\r.finally(async () =\u0026gt; {\rawait prisma.$disconnect()\r})\r接着我们执行下面的命令\nnode index.js\r结果应该是一个空的数组，很明显，我们没有添加数据嘛\n我们在原有的基础上加上一些代码\nawait prisma.user.create({\rdata: {\rname: 'Alice',\remail: 'alice@prisma.io',\rposts: {\rcreate: { title: 'Hello World' },\r},\rprofile: {\rcreate: { bio: 'I like turtles' },\r},\r},\r})\r这就是添加数据的操作\n完整版： #\rasync function main() {\rawait prisma.user.create({\rdata: {\rname: 'Alice',\remail: 'alice@prisma.io',\rposts: {\rcreate: { title: 'Hello World' },\r},\rprofile: {\rcreate: { bio: 'I like turtles' },\r},\r},\r})\rconst allUsers = await prisma.user.findMany({\rinclude: {\rposts: true,\rprofile: true,\r},\r})\rconsole.dir(allUsers, { depth: null })\r}\r我们看到的结果应该是这样的：\n[\r{\remail: 'alice@prisma.io',\rid: 1,\rname: 'Alice',\rposts: [\r{\rcontent: null,\rcreatedAt: 2020-03-21T16:45:01.246Z,\rid: 1,\rpublished: false,\rtitle: 'Hello World',\rauthorId: 1,\r}\r],\rprofile: {\rbio: 'I like turtles',\rid: 1,\ruserId: 1,\r}\r}\r]\r查看数据库应该也能看到我们添加了相对应的数据\n下面再看看修改的操作\nasync function main() {\rconst post = await prisma.post.update({\rwhere: { id: 1 },\rdata: { published: true },\r})\rconsole.log(post)\r}\r你将看到以下输出\n{\rid: 1,\rtitle: 'Hello World',\rcontent: null,\rpublished: true,\rauthorId: 1\r}\r怎么样，是不是感觉prisma还是挺有意思的😊\n5.在浏览器中查看数据库 #\r当时让我印象最深刻的还是prisma的这个功能，它可以在浏览器中看数据库耶！\n你只要在终端中输入以下命令\nnpx prisma studio\r就可以在浏览器中查看你的数据库，可以在表中进行增删改查的操作，很方便不是吗？\n关于prisma连接mysql的简单操作应用就到这里了，这是我的第一篇博客，第一次写博客感觉花了好多时间，但是我觉得挺开心的，希望以后可以坚持下去，和你们分享学到的东西和我的理解🥳\n","date":"2022年11月20日","permalink":"/articles/prisma-mysql/","section":"一些文章","summary":"第一次写博客有点不知所措，随便聊聊吧😋 之前跟着学Nestjs的时候视频里用了prisma，当时听的似懂非懂，感觉Nestjs好用又不好用，Nestjs没记住多少但是记住了prisma，所以现在想仔细学一下 本篇文章只是介绍一下prisma连接数据库（我用的是mysql）以及一些简单的操作（复杂的我暂时还用不上），所以如果有讲的不好的请多多见谅🤧","title":"使用Prisma连接mysql"},{"content":"","date":"0001年01月01日","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]